# version: '1'

services:
  frontend:
    build:
      context: ./srcs/frontend
      dockerfile: Dockerfile
    image: frontend-img:dev
    container_name: frontend_c
    depends_on:
      - transcendence
    ports:
      - "443:443"
    env_file: .env
    networks:
      - frontend-network
    restart: always
    volumes:
      - frontend-data:/app/frontend

  transcendence:
    build:
      context: ./srcs/backend/transcendence
      dockerfile: Dockerfile
    image: transcendence-img:dev
    container_name: transcendence_c
    env_file: .env
    restart: always
    depends_on:
      database:
        condition: service_healthy
    networks:
      - frontend-network
      - backend-network

  database:
    build:
      context: ./srcs/backend/database
      dockerfile: Dockerfile
    image: database-img:dev
    container_name: database_c
    ports:
      - "5432:5432"
    env_file: .env
    restart: always
    networks:
      - backend-network
    volumes:
      - database-data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 3s
      timeout: 15s
      retries: 10

volumes:
  frontend-data:
    name: frontend-data
    driver: local
    driver_opts:
      type: none
      device: ./srcs/frontend/srcs
      o: bind
  database-data:
    name: database-data

networks:
  frontend-network:
    name: frontend-network
  backend-network:
    name: backend-network
